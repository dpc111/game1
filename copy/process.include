
#各平台类库差异, 设置特定值
ifeq '${OS_NAME}' 'SunOS'
    CLDFLAGS += -lsocket
    CXXLDFLAGS += -lsocket
    DCPPFLAGS += -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT
endif

SFIX     :=  .c .C .cpp  .cc .CPP  .c++  .cp  .cxx

VPATH := ${SRC_DIR}


SOURCES := $(foreach x,${SRC_DIR},\
           $(wildcard  \
           $(addprefix  ${x}/*,${SFIX})))

OBJS := $(addsuffix .o ,$(basename $(notdir ${SOURCES}) ) )

DEPENDS := $(addsuffix .d ,$(basename  ${SOURCES} ) )

.PHONY : all check  clean  install

all :  ${PROGRAM}

LDCXX := $(strip $(filter-out  %.c , ${SOURCES} ) )

ifdef 
LDCXX   													#有C++源码时,所有源码都使用g++编译，包括C源码，将CC、CFLAGS 的值设置为对应的${CXX}、 ${CXXFLAGS}的值
    CC := ${CXX}                    						#重置C编译器为C++编译器
    CFLAGS :=  ${CXXFLAGS}          						#重置C编译选现为C++编译选现
    CPP :=  ${CXXPP}                						#重置C预编译器为C++预编译器
    CPPFLAGS := ${CXXPPFLAGS}       						#重置C预编译的选项为C++预编译的选项
endif

${PROGRAM} :  ${DEPENDS}  ${OBJS}
ifeq ($(strip $(filter-out  %.c  , ${SOURCES} ) ),)    		#只有C源码时使用gcc连接
	${CC}  ${LIBDIRS}  ${CLDFLAGS}    ${OBJS} -o $@
else                                                 		#有C++源码时使用g++连接
    ifdef MODULEFLAGS
	$(CXX) ${LIBDIRS} ${CXXLDFLAGS} -Wl,--no-undefined ${OBJS} $(MODULEFLAGS) $@
	#$(CXX) ${LIBDIRS} ${CXXLDFLAGS} ${OBJS} $(MODULEFLAGS) $@
    else
	$(AR) cr $@ $(OBJS)
    endif
endif

%.o : %.c
	$(CC)      ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<

%.o : %.C
	$(CXX)     ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<

%.o : %.cc
	${CXX}     ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<

%.o : %.cpp
	${CXX}     ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<

%.o : %.CPP
	${CXX}     ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<

%.o : %.c++
	${CXX}     ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<

%.o : %.cp
	${CXX}     ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<

%.o : %.cxx
	${CXX}     ${DCPPFLAGS}    ${CXXFLAGS}    ${INCLUDES}   $<


%.d : %.c
	@${CC}     -M   -MD    ${INCLUDES} $<

%.d : %.C
	@${CXX}    -MM  -MD    ${INCLUDES} $<

%.d : %.cc
	@${CXX}    -MM  -MD    ${INCLUDES} $<

%.d : %.cpp
	@${CXX}    -MM  -MD    ${INCLUDES} $<

%.d : %.CPP
	@${CXX}    -MM  -MD    ${INCLUDES} $<

%.d : %.c++
	@${CXX}    -MM  -MD    ${INCLUDES} $<

%.d : %.cp
	@${CXX}    -MM  -MD    ${INCLUDES} $<

%.d : %.cxx
	@${CXX}    -MM  -MD    ${INCLUDES} $<


clean :
	-${RM} ${BIN}/${PROGRAM}
	-${RM} ${BIN}/*.o
	-${RM} ${BIN}/*.d
	-${RM} *.o
	-${RM} *.d


install :
ifdef MODULEFLAGS
	-${MV} ${PROGRAM} ${BIN}
else
	-mkdir -p ${LIB}
	-${MV} ${PROGRAM} ${BIN}
endif
	-mkdir -p ${BIN}/$(OUTDIR)/$(OUTTARGET)
	-${MV}  *.o ${BIN}/            ##$(OUTDIR)/$(OUTTARGET)
	-${MV}  *.d ${BIN}/            ##$(OUTDIR)/$(OUTTARGET)
