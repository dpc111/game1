// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hall.proto

#include "hall.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace hall {
class c2r_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<c2r_login>
      _instance;
} _c2r_login_default_instance_;
class r2c_loginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<r2c_login>
      _instance;
} _r2c_login_default_instance_;
}  // namespace hall
namespace protobuf_hall_2eproto {
void InitDefaultsc2r_loginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::hall::_c2r_login_default_instance_;
    new (ptr) ::hall::c2r_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hall::c2r_login::InitAsDefaultInstance();
}

void InitDefaultsc2r_login() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsc2r_loginImpl);
}

void InitDefaultsr2c_loginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::hall::_r2c_login_default_instance_;
    new (ptr) ::hall::r2c_login();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::hall::r2c_login::InitAsDefaultInstance();
}

void InitDefaultsr2c_login() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsr2c_loginImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::c2r_login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::c2r_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::r2c_login, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::r2c_login, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::r2c_login, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::r2c_login, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::r2c_login, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::hall::r2c_login, icon_),
  0,
  3,
  1,
  2,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 5, sizeof(::hall::c2r_login)},
  { 5, 14, sizeof(::hall::r2c_login)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::hall::_c2r_login_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::hall::_r2c_login_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "hall.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nhall.proto\022\004hall\"\013\n\tc2r_login\"A\n\tr2c_l"
      "ogin\022\013\n\003err\030\001 \002(\t\022\013\n\003uid\030\002 \002(\005\022\014\n\004name\030\003"
      " \002(\t\022\014\n\004icon\030\004 \002(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 98);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "hall.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_hall_2eproto
namespace hall {

// ===================================================================

void c2r_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

c2r_login::c2r_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_hall_2eproto::InitDefaultsc2r_login();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hall.c2r_login)
}
c2r_login::c2r_login(const c2r_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:hall.c2r_login)
}

void c2r_login::SharedCtor() {
  _cached_size_ = 0;
}

c2r_login::~c2r_login() {
  // @@protoc_insertion_point(destructor:hall.c2r_login)
  SharedDtor();
}

void c2r_login::SharedDtor() {
}

void c2r_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* c2r_login::descriptor() {
  ::protobuf_hall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const c2r_login& c2r_login::default_instance() {
  ::protobuf_hall_2eproto::InitDefaultsc2r_login();
  return *internal_default_instance();
}


void c2r_login::Clear() {
// @@protoc_insertion_point(message_clear_start:hall.c2r_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool c2r_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hall.c2r_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:hall.c2r_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hall.c2r_login)
  return false;
#undef DO_
}

void c2r_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hall.c2r_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hall.c2r_login)
}

::google::protobuf::uint8* c2r_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hall.c2r_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hall.c2r_login)
  return target;
}

size_t c2r_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hall.c2r_login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void c2r_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hall.c2r_login)
  GOOGLE_DCHECK_NE(&from, this);
  const c2r_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const c2r_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hall.c2r_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hall.c2r_login)
    MergeFrom(*source);
  }
}

void c2r_login::MergeFrom(const c2r_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hall.c2r_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void c2r_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hall.c2r_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c2r_login::CopyFrom(const c2r_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hall.c2r_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c2r_login::IsInitialized() const {
  return true;
}

void c2r_login::Swap(c2r_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void c2r_login::InternalSwap(c2r_login* other) {
  using std::swap;
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata c2r_login::GetMetadata() const {
  protobuf_hall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void r2c_login::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int r2c_login::kErrFieldNumber;
const int r2c_login::kUidFieldNumber;
const int r2c_login::kNameFieldNumber;
const int r2c_login::kIconFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

r2c_login::r2c_login()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_hall_2eproto::InitDefaultsr2c_login();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:hall.r2c_login)
}
r2c_login::r2c_login(const r2c_login& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_err()) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_icon()) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:hall.r2c_login)
}

void r2c_login::SharedCtor() {
  _cached_size_ = 0;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uid_ = 0;
}

r2c_login::~r2c_login() {
  // @@protoc_insertion_point(destructor:hall.r2c_login)
  SharedDtor();
}

void r2c_login::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void r2c_login::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* r2c_login::descriptor() {
  ::protobuf_hall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hall_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const r2c_login& r2c_login::default_instance() {
  ::protobuf_hall_2eproto::InitDefaultsr2c_login();
  return *internal_default_instance();
}


void r2c_login::Clear() {
// @@protoc_insertion_point(message_clear_start:hall.r2c_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!err_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      err_.UnsafeMutablePointer()->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      name_.UnsafeMutablePointer()->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!icon_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      icon_.UnsafeMutablePointer()->clear();
    }
  }
  uid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool r2c_login::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:hall.r2c_login)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string err = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), static_cast<int>(this->err().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hall.r2c_login.err");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 uid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hall.r2c_login.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string icon = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hall.r2c_login.icon");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:hall.r2c_login)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:hall.r2c_login)
  return false;
#undef DO_
}

void r2c_login::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:hall.r2c_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hall.r2c_login.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->err(), output);
  }

  // required int32 uid = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uid(), output);
  }

  // required string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hall.r2c_login.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // required string icon = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hall.r2c_login.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->icon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:hall.r2c_login)
}

::google::protobuf::uint8* r2c_login::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:hall.r2c_login)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string err = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), static_cast<int>(this->err().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hall.r2c_login.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->err(), target);
  }

  // required int32 uid = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uid(), target);
  }

  // required string name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hall.r2c_login.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // required string icon = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hall.r2c_login.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->icon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:hall.r2c_login)
  return target;
}

size_t r2c_login::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:hall.r2c_login)
  size_t total_size = 0;

  if (has_err()) {
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (has_name()) {
    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_icon()) {
    // required string icon = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  if (has_uid()) {
    // required int32 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());
  }

  return total_size;
}
size_t r2c_login::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:hall.r2c_login)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string err = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());

    // required string name = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string icon = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());

    // required int32 uid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void r2c_login::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:hall.r2c_login)
  GOOGLE_DCHECK_NE(&from, this);
  const r2c_login* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const r2c_login>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:hall.r2c_login)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:hall.r2c_login)
    MergeFrom(*source);
  }
}

void r2c_login::MergeFrom(const r2c_login& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:hall.r2c_login)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_icon();
      icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
    }
    if (cached_has_bits & 0x00000008u) {
      uid_ = from.uid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void r2c_login::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:hall.r2c_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void r2c_login::CopyFrom(const r2c_login& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:hall.r2c_login)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool r2c_login::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void r2c_login::Swap(r2c_login* other) {
  if (other == this) return;
  InternalSwap(other);
}
void r2c_login::InternalSwap(r2c_login* other) {
  using std::swap;
  err_.Swap(&other->err_);
  name_.Swap(&other->name_);
  icon_.Swap(&other->icon_);
  swap(uid_, other->uid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata r2c_login::GetMetadata() const {
  protobuf_hall_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_hall_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace hall
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hall::c2r_login* Arena::Create< ::hall::c2r_login >(Arena* arena) {
  return Arena::CreateInternal< ::hall::c2r_login >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::hall::r2c_login* Arena::Create< ::hall::r2c_login >(Arena* arena) {
  return Arena::CreateInternal< ::hall::r2c_login >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
